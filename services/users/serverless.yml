service: stats-app-2-users

package:
  individually: true

plugins:
  - serverless-bundle # Package our functions with Webpack
  - serverless-offline

# custom:
#   # Our stage is based on what is passed in when running serverless
#   # commands. Or fallsback to what we have set in the provider section.
#   stage: ${opt:stage, self:provider.stage}
#   # Set the table name here so we can use it while testing locally
#   tableHistory: ${self:custom.stage}-results-history
#   tablePlayer: ${self:custom.stage}-player-results
#   tableFaction: ${self:custom.stage}-faction-results
#   tableCommander: ${self:custom.stage}-commander-results
#   playerProfile: ${self:custom.stage}-ExtPlayerProfileArn
#   factionProfile: ${self:custom.stage}-faction-profile
#   commanderProfile: ${self:custom.stage}-commander-profile2
#   tournamentInfo: ${self:custom.stage}-tournament-info
#   tournamentPlayers: ${self:custom.stage}-tournament-players
#   tournamentGames: ${self:custom.stage}-tournament-games

provider:
  name: aws
  runtime: nodejs10.x
  stage: dev
  region: eu-west-2

  apiGateway:
    restApiId:
      'Fn::ImportValue': ${self:custom.stage}-ExtApiGatewayRestApiId
    restApiRootResourceId:
      'Fn::ImportValue': ${self:custom.stage}-ExtApiGatewayRestApiRootResourceId

  # These environment variables are made available to our functions
  # under process.env.
  environment:
    # tableHistory: ${self:custom.tableHistory}
    # tablePlayer: ${self:custom.tablePlayer}
    # tableFaction: ${self:custom.tableFaction}
    # tableCommander: ${self:custom.tableCommander}
    playerProfile: ${self:custom.stage}-ExtPlayerProfileArn
    # factionProfile: ${self:custom.factionProfile}
    # commanderProfile: ${self:custom.commanderProfile}
    # tournamentInfo: ${self:custom.tournamentInfo}
    # tournamentPlayers: ${self:custom.tournamentPlayers}
    # tournamentGames: ${self:custom.tournamentGames}

functions:
  createprofile:
    handler: createprofile.main
    events:
      - http:
          path: player-profile
          method: post
          cors: true
          authorizer: aws_iam
